---
import Layout from '../layouts/Layout.astro';
import Libros from '../assets/Libros.webp';
---

<Layout>
	<div class="pt-2.5">
		<header class="font-bold bg-[#F5F3EB] rounded-full max-w-5xl mx-auto header-responsive relative">
			<!-- Hamburger Menu Button -->
			<button class="hamburger-menu absolute z-10" onclick="toggleMenu()">
				<div class="hamburger-line"></div>
				<div class="hamburger-line"></div>
				<div class="hamburger-line"></div>
			</button>
			
			<!-- Navigation Menu -->
			<nav class="navigation-menu absolute bg-[#F5F3EB] rounded-lg shadow-lg z-20 hidden">
				<a href="/" class="nav-link block px-4 py-2 text-[14px] hover:bg-[#E5E1D6] rounded-t-lg transition-colors duration-200">Home</a>
				<a href="/comic" class="nav-link block px-4 py-2 text-[14px] hover:bg-[#E5E1D6] rounded-b-lg transition-colors duration-200">Comics</a>
			</nav>
			
			<div class="header-content">
				<h1 class="header-title">Reading is my superpower</h1>
				<img src={Libros.src} alt="Libros" class="header-book-left" />
				<img src={Libros.src} alt="Libros" class="header-book-right" />
			</div>
		</header>

		<form id="login-form" class="bg-[#F5F3EB] rounded-lg shadow-lg p-6 max-w-5xl mx-auto mt-8 login-form-responsive">
			<h2 class="text-2xl font-bold text-center mb-6 text-gray-900 login-title-responsive">Login</h2>
			<div class="space-y-4">
				<div class="flex flex-col">
					<label for="Code" class="text-gray-700 font-medium mb-1">Code:</label>
					<input 
						type="text" 
						id="Code" 
						name="Code" 
						required 
						placeholder="Enter your code"
						class="p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#3A5A6B]"
					>
				</div>

				<div class="flex flex-col">
					<label for="email" class="text-gray-700 font-medium mb-1">Email:</label>
					<input 
						type="email" 
						id="email" 
						name="email" 
						required 
						placeholder="Enter your email"
						class="p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#3A5A6B]"
					>
				</div>

				<div class="flex flex-col">
					<label for="password" class="text-gray-700 font-medium mb-1">Password:</label>
					<input 
						type="password" 
						id="password" 
						name="password" 
						required 
						placeholder="Enter your password"
						class="p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#3A5A6B]"
					>
				</div>

				<button type="submit" class="w-full bg-[#3A5A6B] text-white py-2 px-4 rounded-lg hover:bg-blue-800 transition-colors login-button-responsive">
					Login
				</button>
				
				<p id="message" class="text-sm text-center mt-2"></p>
			</div>
		</form>
	</div>

	<script type="module">
		const form = document.querySelector('#login-form');
		const message = document.getElementById('message');
		
		form.addEventListener('submit', async (e) => {
			e.preventDefault();

			const data = new FormData(form);
			const payload = {
				code: data.get('Code'),
				email: data.get('email'),
				password: data.get('password')
			};

			try {
				const res = await fetch('/api/login', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify(payload)
				});

				const result = await res.json();

				if (res.ok) {
					message.textContent = result.message || 'Login successful!';
					message.className = 'text-green-600 text-sm text-center mt-2';
					setTimeout(() => {
						window.location.href = '/dashboard';
					}, 1000);
				} else {
					message.textContent = result.message || 'Login failed. Please try again.';
					message.className = 'text-red-600 text-sm text-center mt-2';
				}
			} catch (error) {
				message.textContent = 'Error connecting to server. Please try again.';
				message.className = 'text-red-600 text-sm text-center mt-2';
			}
		});
	</script>
</Layout>

<style>
/* Base Header Styles */
.header-responsive {
    padding: 0.5rem 1rem;
    min-height: 3rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

.header-content {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    position: relative;
}

.header-title {
    font-size: 18px;
    color: #333;
    margin: 0;
    text-align: center;
}

.header-book-left,
.header-book-right {
    width: 2.5rem;
    height: 2rem;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    transition: all 0.3s ease;
    /* Hide by default - will only show on desktop */
    display: none;
}

/* Hamburger Menu Styles */
.hamburger-menu {
    cursor: pointer;
    padding: 8px;
    border: none;
    background: none;
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    border-radius: 4px;
    transition: background-color 0.3s ease;
    z-index: 30;
}

.hamburger-menu:hover {
    background-color: rgba(0, 0, 0, 0.05);
}

.hamburger-line {
    width: 20px;
    height: 2px;
    background-color: #333;
    margin: 3px 0;
    transition: 0.3s;
    border-radius: 2px;
}

.hamburger-menu:hover .hamburger-line {
    background-color: #000;
}

.navigation-menu {
    min-width: 120px;
    border: 1px solid #E5E1D6;
    left: 1rem;
    top: calc(100% + 0.5rem);
}

.nav-link {
    text-decoration: none;
    color: #333;
    font-weight: 500;
}

.nav-link:hover {
    color: #000;
}

/* Login Form Base Styles */
.login-form-responsive {
    width: 100%;
    max-width: 400px;
}

.login-title-responsive {
    font-size: 1.5rem;
}

.login-button-responsive {
    font-size: 1rem;
    padding: 0.75rem 1rem;
}

/* Desktop Styles - ONLY HERE SHOW THE BOOKS */
@media (min-width: 1024px) {
    .header-responsive {
        padding: 0.5rem 2rem;
        min-height: 3rem;
    }
    
    .header-title {
        font-size: 22px;
    }
    
    /* Show book images ONLY on desktop */
    .header-book-left,
    .header-book-right {
        display: block;
    }
    
    .header-book-left {
        left: calc(50% - 200px);
    }
    
    .header-book-right {
        right: calc(50% - 200px);
    }
    
    .login-form-responsive {
        max-width: 500px;
        padding: 2rem;
    }
    
    .login-title-responsive {
        font-size: 2rem;
    }
    
    .login-button-responsive {
        font-size: 1.1rem;
        padding: 0.875rem 1.25rem;
    }
}

/* Large Desktop */
@media (min-width: 1440px) {
    .header-book-left {
        left: calc(50% - 240px);
    }
    
    .header-book-right {
        right: calc(50% - 240px);
    }
}

/* Extra Large Desktop */
@media (min-width: 1920px) {
    .header-book-left {
        left: calc(50% - 300px);
    }
    
    .header-book-right {
        right: calc(50% - 300px);
    }
}

/* Tablet Styles - NO BOOKS */
@media (min-width: 768px) and (max-width: 1023px) {
    .header-responsive {
        margin: 0 1.5rem;
        padding: 0.75rem 1rem;
        min-height: 3.5rem;
    }
    
    .header-content {
        gap: 1.5rem;
    }
    
    .header-title {
        font-size: 18px;
    }
    
    /* Books remain hidden on tablet */
    .header-book-left, 
    .header-book-right {
        display: none;
    }
    
    .hamburger-menu {
        padding: 6px;
    }
    
    .hamburger-line {
        width: 18px;
    }
    
    .navigation-menu {
        top: calc(100% + 0.25rem);
    }
    
    .login-form-responsive {
        margin: 1rem 1.5rem;
        max-width: 450px;
        padding: 1.5rem;
    }
    
    .login-title-responsive {
        font-size: 1.75rem;
    }
    
    .login-button-responsive {
        font-size: 1rem;
        padding: 0.75rem 1rem;
    }
}

/* Mobile Styles - NO BOOKS */
@media (max-width: 767px) {
    .pt-2.5 {
        padding-top: 0.75rem;
    }
    
    .header-responsive {
        margin: 0 1rem;
        padding: 0.5rem;
        min-height: 3rem;
    }
    
    .header-content {
        gap: 0.75rem;
    }
    
    .header-title {
        font-size: 15px;
        margin: 0;
        text-align: center;
        line-height: 1.3;
    }
    
    /* Books remain hidden on mobile */
    .header-book-left, 
    .header-book-right {
        display: none;
    }
    
    .hamburger-menu {
        padding: 4px;
        left: 0.5rem;
    }
    
    .hamburger-line {
        width: 16px;
        height: 1.5px;
        margin: 2.5px 0;
    }
    
    .navigation-menu {
        top: calc(100% + 0.25rem);
        left: 0.5rem;
    }
    
    .login-form-responsive {
        margin: 0.75rem;
        max-width: none;
        padding: 1.25rem;
    }
    
    .login-title-responsive {
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
    }
    
    .login-button-responsive {
        font-size: 0.95rem;
        padding: 0.75rem 1rem;
    }
}

/* Extra Small Mobile - NO BOOKS */
@media (max-width: 480px) {
    .header-content {
        gap: 0.5rem;
    }
    
    .header-title {
        font-size: 13px;
        line-height: 1.2;
    }
    
    /* Books remain hidden on extra small mobile */
    .header-book-left, 
    .header-book-right {
        display: none;
    }
    
    .hamburger-menu {
        padding: 3px;
        left: 0.25rem;
    }
    
    .hamburger-line {
        width: 14px;
        height: 1.5px;
    }
    
    .navigation-menu {
        left: 0.25rem;
    }
    
    .login-form-responsive {
        margin: 0.5rem;
        padding: 1rem;
    }
    
    .login-title-responsive {
        font-size: 1.25rem;
        margin-bottom: 1.25rem;
    }
    
    .login-button-responsive {
        font-size: 0.9rem;
        padding: 0.625rem 0.875rem;
    }
}

/* Animation for menu toggle */
@keyframes slideDown {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.navigation-menu:not(.hidden) {
    animation: slideDown 0.3s ease-out;
}
</style>

<script>
function toggleMenu() {
    const menu = document.querySelector('.navigation-menu');
    if (menu) {
        menu.classList.toggle('hidden');
    }
}

// Close menu when clicking outside
document.addEventListener('click', function(event) {
    const menu = document.querySelector('.navigation-menu');
    const hamburger = document.querySelector('.hamburger-menu');
    
    if (menu && hamburger) {
        if (!menu.contains(event.target) && !hamburger.contains(event.target)) {
            menu.classList.add('hidden');
        }
    }
});

// Ensure script runs after DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
    const hamburgerButton = document.querySelector('.hamburger-menu');
    if (hamburgerButton) {
        hamburgerButton.addEventListener('click', toggleMenu);
    }
});
</script>